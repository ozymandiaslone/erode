local state = {
  setup = nil,
  cam_pos = {0, 0},
}

function update()
  if not state.setup then setup() end
  handle_inputs()
  update_texture_positions()
  draw_background()
end

function setup() 
  state.assets = {
    forest_bg = setup_bg_asset("assets/demon_woods/layers/parallax-demon-woods-bg.png"),
    far_trees = setup_bg_asset("assets/demon_woods/layers/parallax-demon-woods-far-trees.png"),
    mid_trees = setup_bg_asset("assets/demon_woods/layers/parallax-demon-woods-mid-trees.png"),
    near_trees = setup_bg_asset("assets/demon_woods/layers/parallax-demon-woods-close-trees.png"),
  }
  state.setup = true 
end

function setup_bg_asset(path) 
  return { texture = load_texture(path), pos = {0, 0} }
end

function draw_background() 
  -- first draw the background
  local bg_pos = state.assets.forest_bg.pos
  draw_scaled(state.assets.forest_bg.texture, bg_pos[1], bg_pos[2])
  -- next we draw the furthest layer of trees
  local far_trees_pos = state.assets.far_trees.pos
  draw_scaled(state.assets.far_trees.texture, far_trees_pos[1], far_trees_pos[2])
  -- now the mid trees...
  local mid_trees_pos = state.assets.mid_trees.pos
  draw_scaled(state.assets.mid_trees.texture, mid_trees_pos[1], mid_trees_pos[2])
  -- finally the near trees
  local near_trees_pos = state.assets.near_trees.pos
  draw_scaled(state.assets.near_trees.texture, near_trees_pos[1], near_trees_pos[2])
end

function draw_scaled(texture, x, y)
  local texture_w = texture:width()
  local texture_h = texture:height()
  local scl_x = screen_width() / texture_w
  local scl_y = screen_height() / texture_h
  local scl = math.max(scl_x, scl_y)

  local scaled_texture_w = texture_w * scl
  local wrap_threshold = -scaled_texture_w

  local texture_x = x % scaled_texture_w

  if texture_x < wrap_threshold then
    texture_x = texture_x + scaled_texture_w
  end

  -- wrap the texture coordinate based on its width
  draw_texture_part(texture, 0, 0, texture_w, texture_h, texture_x, y, 0, scl)

  -- draw the texture to the right, if needed
  local texture_end_x = texture_x + (texture_w * scl)
  if texture_end_x < screen_width() then
    draw_texture_part(texture, 0, 0, texture_w, texture_h, texture_end_x, y, 0, scl)
  end
end

function update_texture_positions()
  local far_trees_pos = state.assets.far_trees.pos
  local mid_trees_pos = state.assets.mid_trees.pos
  local near_trees_pos = state.assets.near_trees.pos
  far_trees_pos[1] = (state.cam_pos[1]) 
  mid_trees_pos[1] = (2 * state.cam_pos[1])
  near_trees_pos[1] = (3 * state.cam_pos[1])
end


-- TODO FIX THIS - MOVEMENT SPEED IS BASED ON frame rate (not dt)
function handle_inputs()
  if is_key_down("W") then

  end
  if is_key_down("A") then
    -- move left 
    state.cam_pos[1] = state.cam_pos[1] + 0.65

  end
  if is_key_down("S") then

  end
  if is_key_down("D") then
    -- move right
    state.cam_pos[1] = state.cam_pos[1] - 0.65 
  end
end


